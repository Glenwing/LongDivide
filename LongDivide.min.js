/*

LongDivide.min.js
Created by Glenwing (https://github.com/Glenwing)

Version: 1.3.0
October 21, 2019

*/

function LongDivide(e,i,n){try{Decimal.set({precision:1e3})}catch(e){return LongDivide.PrintError("Decimal.js library not detected. LongDivide.js requires Decimal.js in order to operate. (https://github.com/MikeMcl/decimal.js)"),LongDivide.error_output}if(""===e||""===i)return"";if("string"==typeof e||"number"==typeof e)try{if((e=new Decimal(e)).isNaN()||!e.isFinite())return LongDivide.PrintError("First argument is NaN or Infinity.\nArgument:",e),LongDivide.error_output}catch(i){return LongDivide.PrintError("First argument could not be interpreted as a number.\nArgument:",e),LongDivide.error_output}else"object"==typeof e?e.constructor!==Decimal&&LongDivide.PrintError("First argument is an unrecognized object. Argument must be a string, number, or Decimal object.\nArgument:",e):LongDivide.PrintError("First argument is of an unrecognized type.\ntypeof(A):",typeof e);if("string"==typeof i||"number"==typeof i)try{!(i=new Decimal(i)).isNaN()&&i.isFinite()||LongDivide.PrintError("Second argument is NaN or Infinity.\nArgument:",i)}catch(e){return LongDivide.PrintError("Second argument could not be interpreted as a number.\nArgument:",i),LongDivide.error_output}else"object"==typeof i?i.constructor!==Decimal&&LongDivide.PrintError("Second argument is an unrecognized object. Argument must be a string, number, or Decimal object.\nArgument:",i):LongDivide.PrintError("Second argument is of an unrecognized type.\ntypeof(B):",typeof i);if(i.isZero())return LongDivide.PrintError("Division by zero"),LongDivide.error_output;if(!e.div(i).isFinite())return LongDivide.PrintError("Division result is Infinity,\nA:",e.toFixed(e.dp()),"\nB:",i.toFixed(i.dp())),LongDivide.error_output;void 0===n&&(n={}),"number"==typeof n?n={p:n}:"string"==typeof n?n=LongDivide.parseFormatString(n):"format"in n&&(n=LongDivide.parseFormatString(n));var r=void 0!==n.OL_open?n.OL_open:LongDivide.OL_open,o=void 0!==n.OL_close?n.OL_close:LongDivide.OL_close,t=void 0!==n.p?n.p:void 0!==n.p_max?n.p_max:void 0!==n.pmax?n.pmax:LongDivide.p_max,a=void 0!==n.p?n.p:void 0!==n.p_min?n.p_min:void 0!==n.pmin?n.pmin:LongDivide.p_min,d=void 0!==n.leading?n.leading:LongDivide.leading,s=void 0!==n.decimal?n.decimal:LongDivide.decimal,g=void 0!==n.thousands?n.thousands:LongDivide.thousands,c=void 0!==n.thousandths?n.thousandths:LongDivide.thousandths,u=void 0!==n.orphan?n.orphan:void 0!==n.orphans?n.orphans:LongDivide.orphans,l=void 0!==n.base?n.base:10,p=void 0!==n.minus?n.minus:LongDivide.minus,v=void 0!==n.plus?n.plus:LongDivide.plus,m=void 0!==n.approx?n.approx:void 0!==n["~"]?n["~"]:LongDivide.approx,h=void 0!==n.currency?n.currency:LongDivide.currency,D=void 0!==n.si?n.si:void 0!==n.SI?n.SI:LongDivide.si,L=void 0!==n["2_singles"]?n["2_singles"]:LongDivide.two_singles,f=void 0!==n.repeat?n.repeat:LongDivide.repeat,x=void 0!==n.exp?n.exp:void 0!==n.e?n.e:LongDivide.exp,_=void 0!==n.exp_open?n.exp_open:LongDivide.exp_open,b=void 0!==n.exp_close?n.exp_close:LongDivide.exp_close,y=void 0!==n.exp_minus?n.exp_minus:LongDivide.exp_minus,O=void 0!==n.exp_plus?n.exp_plus:LongDivide.exp_plus;if(""==r&&""==o&&(f=!1,n.repeat=!1),void 0!==n.thousands&&"."===n.thousands&&void 0===n.decimal&&(s=","),s===g){if(void 0!==n.decimal)return LongDivide.PrintError("Decimal point character and thousands grouping character cannot be the same.\ndecimal_point_char:"+s+"\nthousands_char:"+g),LongDivide.error_output;"."===s?s=",":","===s&&(s=".")}if(s===c)return LongDivide.PrintError("Decimal point character and thousandths grouping character cannot be the same.\ndecimal_point_char:"+s+"\nthousandths_char:"+c),LongDivide.error_output;if(s.match(/[0-9]/g))return LongDivide.PrintError("Decimal point character cannot be a number.\nDecimal_Point_Char:",s),LongDivide.error_output;if(g.match(/[0-9]/g))return LongDivide.PrintError("Thousands grouping character cannot be a number.\nThousands_Char:",g),LongDivide.error_output;if(c.match(/[0-9]/g))return LongDivide.PrintError("Thousandths grouping character cannot be a number.\nThousandths_Char:",c),LongDivide.error_output;if(p.match(/[0-9]/g))return LongDivide.PrintError("Minus sign character cannot be a number.\nMinus_Char:",p),LongDivide.error_output;if(v.match(/[0-9]/g))return LongDivide.PrintError("Plus sign character cannot be a number.\nPlus_Char:",v),LongDivide.error_output;if(m.match(/[0-9]/g))return LongDivide.PrintError("Approximation sign character cannot be a number.\nApprox_Char:",m),LongDivide.error_output;if(h.match(/[0-9]/g))return LongDivide.PrintError("Currency symbol cannot be a number.\nCurrency_Char:",h),LongDivide.error_output;var P=!1;!0===x?x="e":"string"==typeof x&&("e"!=(x=x.toLowerCase())&&"ex"!=x&&"ed"!=x&&"custom"!=x||(P=!0));var E,F=v,N="",w="";if(t=Math.round(t),a=Math.round(a),l=Math.round(l),t<0||a<0||t<a||Number.isNaN(t)||Number.isNaN(a)||!Number.isFinite(t)||!Number.isFinite(a))return LongDivide.PrintError("Invalid P_Max and P_Min values. Both values must be non-negative numbers, and P_Min cannot be greater than P_Max.\nP_Max:",t,"P_Min",a),LongDivide.error_output;if(isNaN(l))return LongDivide.PrintError("Invalid Base value. Must be an integer number.\nBase:",l),LongDivide.error_output;if(1==D){for(var M=0,k=0;M<24&&M>-24&&k<10;){if(e.div(i).abs()>=1e3)e=e.div(1e3),M+=3;else{if(!(Math.abs(e.div(i))<1))break;e=e.times(1e3),M-=3}10==(k+=1)&&LongDivide.PrintWarning("Runaway loop in the SI prefix section has hit the watchdog threshold (10 loop cycles) and was aborted. Check your code!\n","A:",e,"B:",i,"Power:",M)}w=0==M?"":"&nbsp;"+{24:"Y",21:"Z",18:"E",15:"P",12:"T",9:"G",6:"M",3:"k",0:"","-3":"m","-6":"&mu;","-9":"n","-12":"p","-15":"f","-18":"a","-21":"z","-24":"y"}[M]}if(0==t&&0==P)return F=(E=e.div(i).round()).isZero()?"":E.isNegative()?p:v,z=(z=E.abs()).toFixed(z.dp()),z=LongDivide.GroupDigits(z,g,c,s,u),z=(z=h.concat(z)).concat(w),z="()"!==F?F.concat(z):"(".concat(z).concat(")"),e.div(i).equals(E)||(z=m.concat(z)),z;if(0!=e.dp()||0!=i.dp()){var I=Decimal.max(e.dp(),i.dp());e=e.times(I),i=i.times(I)}var S=new Decimal(0),j="";1==P?("e"===x?(_="e",b="",O="+",y=p):"ex"===x?(_=" × 10<sup>",b="</sup>",O=v,y=p):"ed"===x&&(_=" ∙ 10<sup>",b="</sup>",O=v,y=p),(E=e.div(i).abs())>0&&(E<1||E>=10)&&(S=new Decimal(E.precision(!0)-E.decimalPlaces()-1)),S.isNegative()?(e=e.times(Decimal.pow(10,S.abs())),S=S.abs(),"10"==e.div(i).abs().toFixed(t).slice(0,2)&&(i=i.times(10),S=S.minus(1)),j=y):(S.isPositive()||S.isZero())&&(i=i.times(Decimal.pow(10,S)),"10"==e.div(i).abs().toFixed(t).slice(0,2)&&(i=i.times(10),S=S.plus(1)),j=O),S=S.toFixed(0)):(S="",_="",b="",j=""),F=e.div(i).isZero()?"":(e.isNegative()?!i.isNegative():i.isNegative())?p:v;var C,A,B,z,Z=e=e.abs(),G=i=i.abs(),T="",R={},W="",q="",Y=!1;C=Z.dividedBy(G).floor(),A=Z.modulo(G),Z=A.times(l),B=C.toFixed(C.dp());for(var H=0;H<t+2;){if(Z.toNumber()in R){if(Y=!0,N="",W=T.substring(0,R[Z]),"0"==(q=T.substring(R[Z],T.length))&&(q="",Y=!1,T=W),T.length>t&&(q="",Y=!1),1==Y&&0==f){for(k=0;T.length<=t;)if(T=T.concat(q),(k+=1)>1e3){LongDivide.PrintWarning("Runaway loop has hit the watchdog threshold in the RepeatEnableFlag section (1 thousand loop cycles) and was aborted. Check your code!\nDecimal_Digits.length:",T.length,"Repetend:",q,"P_Max:",t);break}q="",Y=!1}break}R[Z.toNumber()]=H,C=Z.dividedBy(G).floor(),A=Z.modulo(G),Z=A.times(l),T+=C.toFixed(C.dp()),H+=1}if(T.length>t&&((T=new Decimal("0.".concat(T)).toDecimalPlaces(t)).gte(1)&&(T=T.minus(1),B=new Decimal(B).plus(1).toFixed(0)),T=T.toFixed(t).slice(2),N=m),T.length<a)if(0==Y)T=new Decimal("0.".concat(T)).toFixed(a).slice(2);else if(1==Y)for(a-(W.length+q.length)>=q.length&&(q+=q.repeat(Math.floor((a-(W.length+q.length))/q.length)));W.length+q.length<a;)W=W.concat(q[0]),q=q.slice(1).concat(q[0]);return(z=B.concat(".")).length-1<d&&(z="0".repeat(d-z.length+1).concat(z)),"0."==z&&0==d&&(z="."),1==Y?(1==q.length&&W.length+q.length<t&&1==L&&(q=q.repeat(2)),z=(z=LongDivide.GroupDigits(z.concat(W).concat(q),g,c,s,u)).slice(0,z.indexOf(s)+1+W.length+c.length*Math.floor(W.length/3))+r+z.slice(z.indexOf(s)+1+W.length+c.length*Math.floor(W.length/3))+o):z=LongDivide.GroupDigits(z+T,g,c,s,u),z[z.length-1]==s&&(z=z.replace(s,"")),z=(z=(z=h.concat(z)).concat(_).concat(j).concat(S).concat(b)).concat(w),z="()"==F?"(".concat(z).concat(")"):F.concat(z),z=N.concat(z)}LongDivide.version="1.3.0",LongDivide.p_max=8,LongDivide.p_min=0,LongDivide.leading=1,LongDivide.decimal=".",LongDivide.thousands="",LongDivide.thousandths="",LongDivide.orphans=!1,LongDivide.minus="−",LongDivide.plus="",LongDivide.approx="≈",LongDivide.currency="",LongDivide.exp="",LongDivide.exp_open="e",LongDivide.exp_close="",LongDivide.exp_minus=LongDivide.minus,LongDivide.exp_plus=LongDivide.plus,LongDivide.OL_open='<span style="text-decoration:overline;">',LongDivide.OL_close="</span>",LongDivide.si=!1,LongDivide.two_singles=!0,LongDivide.repeat=!0,LongDivide.errors=!0,LongDivide.warnings=!0,LongDivide.error_output="Error",LongDivide.parseFormatString=function(e){if("string"==typeof e){var i=e;e={}}else i=e.format;if(i=i.toLowerCase(),check=i.match(/[^-+!0.,siexd\[\]\(\) ]/g)||[],check.length>1)return console.log("Error in LongDivide.parseFormatString(): Input contains invalid character(s): ",check),e;if(i.indexOf(!1)&&(i=i.concat(".")),e.leading=(i.slice(0,i.indexOf(".")).match(/0/g)||[]).length,-1!=i.indexOf(",")&&(e.thousands=","),-1!=i.indexOf("!")&&(e.approx=""),-1!=i.indexOf("-")&&(e.minus="−"),-1!=i.indexOf("+")&&(e.plus="+"),-1!=i.indexOf("si")&&(e.si=!0),-1!=i.indexOf("ex")?e.exp="ex":-1!=i.indexOf("ed")?e.exp="ed":-1!=i.indexOf("e")&&(e.exp="e"),e.p_max=(i.slice(i.indexOf(".")).match(/0/g)||[]).length,e.p_min=e.p_max,-1!=i.indexOf("[")||-1!=i.indexOf("]")){if(-1==i.indexOf("["))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Closing bracket used without an open bracket"),e;if(-1==i.indexOf("]"))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Open bracket used without a closing bracket"),e;if(i.indexOf("[")<i.indexOf("."))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Bracket appears in front of decimal point."),e;if(i.indexOf("[")>i.indexOf("]"))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Open bracket ('[') appears after closing bracket (']')"),e;if((i.match(/\[/g)||[]).length>1)return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Multiple open brackets detected"),e;if((i.match(/\]/g)||[]).length>1)return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Multiple closing brackets detected"),e;if(i.lastIndexOf("0")>i.indexOf("]"))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Zeros detected after closing bracket"),e;e.p_min=e.p_max-(i.slice(i.indexOf("[")+1,i.indexOf("]")).match(/0/g)||[]).length}return-1!=i.indexOf("(")&&-1!=i.indexOf(")")&&i.indexOf("(")<i.indexOf(")")&&(e.minus="()"),e},LongDivide.GroupDigits=function(e,i,n,r,o){var t=e.toString().split(".");return t[0]=t[0].replace(/\B(?=(\d{3})+(?!\d))/g,i),t.length>1&&(t[1]=t[1].split("").reverse().join("").replace(/\B(?=(\d{3})+(?!\d))/g,n.split("").reverse().join("")).split("").reverse().join("")),""!=t[1]&&void 0!==t[1]&&""!=n&&e.split(".")[1].length%3==1&&-1!=t[1].indexOf(n)&&0==o&&(t[1]=t[1].slice(0,t[1].lastIndexOf(n)).concat(t[1].slice(t[1].lastIndexOf(n)+n.length))),t.join(r)},LongDivide.PrintError=function(text){if(!0===LongDivide.errors){for(var str='console.log("Error in function LongDivide():"',i=0;i<arguments.length;i++)str+=", arguments["+i+"]";str+=");",eval(str)}},LongDivide.PrintWarning=function(text){if(!0===LongDivide.warnings){for(var str='console.log("Warning in function LongDivide():"',i=0;i<arguments.length;i++)str+=", arguments["+i+"]";str+=");",eval(str)}};