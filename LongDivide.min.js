/*

LongDivide.min.js
Created by Glenwing (https://github.com/Glenwing)

Version: 1.3.1
May the 4th, 2020

*/

function LongDivide(e,i,n){try{Decimal.set({precision:1e3})}catch(e){return LongDivide.PrintError("Decimal.js library not detected. LongDivide.js requires Decimal.js in order to operate. (https://github.com/MikeMcl/decimal.js)"),LongDivide.error_output}if(""===e||""===i)return"";if("string"==typeof e||"number"==typeof e)try{if((e=new Decimal(e)).isNaN()||!e.isFinite())return LongDivide.PrintError("First argument is NaN or Infinity.\nArgument:",e),LongDivide.error_output}catch(i){return LongDivide.PrintError("First argument could not be interpreted as a number.\nArgument:",e),LongDivide.error_output}else"object"==typeof e?e.constructor!==Decimal&&LongDivide.PrintError("First argument is an unrecognized object. Argument must be a string, number, or Decimal object.\nArgument:",e):LongDivide.PrintError("First argument is of an unrecognized type.\ntypeof(A):",typeof e);if("string"==typeof i||"number"==typeof i)try{!(i=new Decimal(i)).isNaN()&&i.isFinite()||LongDivide.PrintError("Second argument is NaN or Infinity.\nArgument:",i)}catch(e){return LongDivide.PrintError("Second argument could not be interpreted as a number.\nArgument:",i),LongDivide.error_output}else"object"==typeof i?i.constructor!==Decimal&&LongDivide.PrintError("Second argument is an unrecognized object. Argument must be a string, number, or Decimal object.\nArgument:",i):LongDivide.PrintError("Second argument is of an unrecognized type.\ntypeof(B):",typeof i);if(i.isZero())return LongDivide.PrintError("Division by zero"),LongDivide.error_output;if(!e.div(i).isFinite())return LongDivide.PrintError("Division result is Infinity,\nA:",e.toFixed(e.dp()),"\nB:",i.toFixed(i.dp())),LongDivide.error_output;void 0===n&&(n={}),"number"==typeof n?n={p:n}:"string"==typeof n?n=LongDivide.parseFormatString(n):"format"in n&&(n=LongDivide.parseFormatString(n));var o=void 0!==n.OL_open?n.OL_open:LongDivide.OL_open,r=void 0!==n.OL_close?n.OL_close:LongDivide.OL_close,t=void 0!==n.p?n.p:void 0!==n.p_max?n.p_max:void 0!==n.pmax?n.pmax:LongDivide.p_max,a=void 0!==n.p?n.p:void 0!==n.p_min?n.p_min:void 0!==n.pmin?n.pmin:LongDivide.p_min,d=void 0!==n.leading?n.leading:LongDivide.leading,s=void 0!==n.decimal?n.decimal:LongDivide.decimal,g=void 0!==n.thousands?n.thousands:LongDivide.thousands,c=void 0!==n.thousandths?n.thousandths:LongDivide.thousandths,u=void 0!==n.orphan?n.orphan:void 0!==n.orphans?n.orphans:LongDivide.orphans,p=void 0!==n.base?n.base:10,l=void 0!==n.minus?n.minus:LongDivide.minus,v=void 0!==n.plus?n.plus:LongDivide.plus,m=void 0!==n.approx?n.approx:void 0!==n["~"]?n["~"]:LongDivide.approx,h=void 0!==n.currency?n.currency:LongDivide.currency,D=void 0!==n.micro?n.micro:LongDivide.micro,L=void 0!==n.si?n.si:void 0!==n.SI?n.SI:LongDivide.si,f=void 0!==n["2_singles"]?n["2_singles"]:LongDivide.two_singles,x=void 0!==n.repeat?n.repeat:LongDivide.repeat,_=void 0!==n.exp?n.exp:void 0!==n.e?n.e:LongDivide.exp,b=void 0!==n.exp_open?n.exp_open:LongDivide.exp_open,y=void 0!==n.exp_close?n.exp_close:LongDivide.exp_close,O=void 0!==n.exp_minus?n.exp_minus:LongDivide.exp_minus,P=void 0!==n.exp_plus?n.exp_plus:LongDivide.exp_plus;if(""==o&&""==r&&(x=!1,n.repeat=!1),void 0!==n.thousands&&"."===n.thousands&&void 0===n.decimal&&(s=","),s===g){if(void 0!==n.decimal)return LongDivide.PrintError("Decimal point character and thousands grouping character cannot be the same.\ndecimal_point_char:"+s+"\nthousands_char:"+g),LongDivide.error_output;"."===s?s=",":","===s&&(s=".")}if(s===c)return LongDivide.PrintError("Decimal point character and thousandths grouping character cannot be the same.\ndecimal_point_char:"+s+"\nthousandths_char:"+c),LongDivide.error_output;if(s.match(/[0-9]/g))return LongDivide.PrintError("Decimal point character cannot be a number.\nDecimal_Point_Char:",s),LongDivide.error_output;if(g.match(/[0-9]/g))return LongDivide.PrintError("Thousands grouping character cannot be a number.\nThousands_Char:",g),LongDivide.error_output;if(c.match(/[0-9]/g))return LongDivide.PrintError("Thousandths grouping character cannot be a number.\nThousandths_Char:",c),LongDivide.error_output;if(l.match(/[0-9]/g))return LongDivide.PrintError("Minus sign character cannot be a number.\nMinus_Char:",l),LongDivide.error_output;if(v.match(/[0-9]/g))return LongDivide.PrintError("Plus sign character cannot be a number.\nPlus_Char:",v),LongDivide.error_output;if(m.match(/[0-9]/g))return LongDivide.PrintError("Approximation sign character cannot be a number.\nApprox_Char:",m),LongDivide.error_output;if(h.match(/[0-9]/g))return LongDivide.PrintError("Currency symbol cannot be a number.\nCurrency_Char:",h),LongDivide.error_output;var E=!1;!0===_?_="e":"string"==typeof _&&("e"!=(_=_.toLowerCase())&&"ex"!=_&&"ed"!=_&&"custom"!=_||(E=!0));var F,N=v,w="",M="";if(t=Math.round(t),a=Math.round(a),p=Math.round(p),t<0||a<0||t<a||Number.isNaN(t)||Number.isNaN(a)||!Number.isFinite(t)||!Number.isFinite(a))return LongDivide.PrintError("Invalid P_Max and P_Min values. Both values must be non-negative numbers, and P_Min cannot be greater than P_Max.\nP_Max:",t,"P_Min",a),LongDivide.error_output;if(isNaN(p))return LongDivide.PrintError("Invalid Base value. Must be an integer number.\nBase:",p),LongDivide.error_output;if(1==L){for(var k=0,I=0;k<24&&k>-24&&I<10;){if(e.div(i).abs()>=1e3)e=e.div(1e3),k+=3;else{if(!(Math.abs(e.div(i))<1))break;e=e.times(1e3),k-=3}10==(I+=1)&&LongDivide.PrintWarning("Runaway loop in the SI prefix section has hit the watchdog threshold (10 loop cycles) and was aborted. Check your code!\n","A:",e,"B:",i,"Power:",k)}M=0==k?"":"&nbsp;"+{24:"Y",21:"Z",18:"E",15:"P",12:"T",9:"G",6:"M",3:"k",0:"","-3":"m","-6":D,"-9":"n","-12":"p","-15":"f","-18":"a","-21":"z","-24":"y"}[k]}if(0==t&&0==E)return N=(F=e.div(i).round()).isZero()?"":F.isNegative()?l:v,Z=(Z=F.abs()).toFixed(Z.dp()),Z=LongDivide.GroupDigits(Z,g,c,s,u),Z=(Z=h.concat(Z)).concat(M),Z="()"!==N?N.concat(Z):"(".concat(Z).concat(")"),e.div(i).equals(F)||(Z=m.concat(Z)),Z;if(0!=e.dp()||0!=i.dp()){var S=Decimal.max(e.dp(),i.dp());e=e.times(S),i=i.times(S)}var j=new Decimal(0),C="";1==E?("e"===_?(b="e",y="",P="+",O=l):"ex"===_?(b=" × 10<sup>",y="</sup>",P=v,O=l):"ed"===_&&(b=" ∙ 10<sup>",y="</sup>",P=v,O=l),(F=e.div(i).abs())>0&&(F<1||F>=10)&&(j=new Decimal(F.precision(!0)-F.decimalPlaces()-1)),j.isNegative()?(e=e.times(Decimal.pow(10,j.abs())),j=j.abs(),"10"==e.div(i).abs().toFixed(t).slice(0,2)&&(i=i.times(10),j=j.minus(1)),C=O):(j.isPositive()||j.isZero())&&(i=i.times(Decimal.pow(10,j)),"10"==e.div(i).abs().toFixed(t).slice(0,2)&&(i=i.times(10),j=j.plus(1)),C=P),j=j.toFixed(0)):(j="",b="",y="",C=""),N=e.div(i).isZero()?"":(e.isNegative()?!i.isNegative():i.isNegative())?l:v;var A,B,z,Z,G=e=e.abs(),T=i=i.abs(),R="",W={},q="",Y="",H=!1;A=G.dividedBy(T).floor(),B=G.modulo(T),G=B.times(p),z=A.toFixed(A.dp());for(var J=0;J<t+2;){if(G.toNumber()in W){if(H=!0,w="",q=R.substring(0,W[G]),"0"==(Y=R.substring(W[G],R.length))&&(Y="",H=!1,R=q),R.length>t&&(Y="",H=!1),1==H&&0==x){for(I=0;R.length<=t;)if(R=R.concat(Y),(I+=1)>1e3){LongDivide.PrintWarning("Runaway loop has hit the watchdog threshold in the RepeatEnableFlag section (1 thousand loop cycles) and was aborted. Check your code!\nDecimal_Digits.length:",R.length,"Repetend:",Y,"P_Max:",t);break}Y="",H=!1}break}W[G.toNumber()]=J,A=G.dividedBy(T).floor(),B=G.modulo(T),G=B.times(p),R+=A.toFixed(A.dp()),J+=1}if(R.length>t&&((R=new Decimal("0.".concat(R)).toDecimalPlaces(t)).gte(1)&&(R=R.minus(1),z=new Decimal(z).plus(1).toFixed(0)),R=R.toFixed(t).slice(2),w=m),R.length<a)if(0==H)R=new Decimal("0.".concat(R)).toFixed(a).slice(2);else if(1==H)for(a-(q.length+Y.length)>=Y.length&&(Y+=Y.repeat(Math.floor((a-(q.length+Y.length))/Y.length)));q.length+Y.length<a;)q=q.concat(Y[0]),Y=Y.slice(1).concat(Y[0]);return(Z=z.concat(".")).length-1<d&&(Z="0".repeat(d-Z.length+1).concat(Z)),"0."==Z&&0==d&&(Z="."),1==H?(1==Y.length&&q.length+Y.length<t&&1==f&&(Y=Y.repeat(2)),Z=(Z=LongDivide.GroupDigits(Z.concat(q).concat(Y),g,c,s,u)).slice(0,Z.indexOf(s)+1+q.length+c.length*Math.floor(q.length/3))+o+Z.slice(Z.indexOf(s)+1+q.length+c.length*Math.floor(q.length/3))+r):Z=LongDivide.GroupDigits(Z+R,g,c,s,u),Z[Z.length-1]==s&&(Z=Z.replace(s,"")),Z=(Z=(Z=h.concat(Z)).concat(b).concat(C).concat(j).concat(y)).concat(M),Z="()"==N?"(".concat(Z).concat(")"):N.concat(Z),Z=w.concat(Z)}LongDivide.version="1.3.1",LongDivide.p_max=8,LongDivide.p_min=0,LongDivide.leading=1,LongDivide.decimal=".",LongDivide.thousands="",LongDivide.thousandths="",LongDivide.orphans=!1,LongDivide.minus="−",LongDivide.plus="",LongDivide.approx="≈",LongDivide.currency="",LongDivide.micro="µ",LongDivide.exp="",LongDivide.exp_open="e",LongDivide.exp_close="",LongDivide.exp_minus=LongDivide.minus,LongDivide.exp_plus=LongDivide.plus,LongDivide.OL_open='<span style="text-decoration:overline;">',LongDivide.OL_close="</span>",LongDivide.si=!1,LongDivide.two_singles=!0,LongDivide.repeat=!0,LongDivide.errors=!0,LongDivide.warnings=!0,LongDivide.error_output="Error",LongDivide.parseFormatString=function(e){if("string"==typeof e){var i=e;e={}}else i=e.format;if(i=i.toLowerCase(),check=i.match(/[^-+!0.,siexd\[\]\(\) ]/g)||[],check.length>1)return console.log("Error in LongDivide.parseFormatString(): Input contains invalid character(s): ",check),e;if(i.indexOf(!1)&&(i=i.concat(".")),e.leading=(i.slice(0,i.indexOf(".")).match(/0/g)||[]).length,-1!=i.indexOf(",")&&(e.thousands=","),-1!=i.indexOf("!")&&(e.approx=""),-1!=i.indexOf("-")&&(e.minus="−"),-1!=i.indexOf("+")&&(e.plus="+"),-1!=i.indexOf("si")&&(e.si=!0),-1!=i.indexOf("ex")?e.exp="ex":-1!=i.indexOf("ed")?e.exp="ed":-1!=i.indexOf("e")&&(e.exp="e"),e.p_max=(i.slice(i.indexOf(".")).match(/0/g)||[]).length,e.p_min=e.p_max,-1!=i.indexOf("[")||-1!=i.indexOf("]")){if(-1==i.indexOf("["))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Closing bracket used without an open bracket"),e;if(-1==i.indexOf("]"))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Open bracket used without a closing bracket"),e;if(i.indexOf("[")<i.indexOf("."))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Bracket appears in front of decimal point."),e;if(i.indexOf("[")>i.indexOf("]"))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Open bracket ('[') appears after closing bracket (']')"),e;if((i.match(/\[/g)||[]).length>1)return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Multiple open brackets detected"),e;if((i.match(/\]/g)||[]).length>1)return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Multiple closing brackets detected"),e;if(i.lastIndexOf("0")>i.indexOf("]"))return console.log("Error in LongDivide.parseFormatString(): Invalid syntax: Zeros detected after closing bracket"),e;e.p_min=e.p_max-(i.slice(i.indexOf("[")+1,i.indexOf("]")).match(/0/g)||[]).length}return-1!=i.indexOf("(")&&-1!=i.indexOf(")")&&i.indexOf("(")<i.indexOf(")")&&(e.minus="()"),e},LongDivide.GroupDigits=function(e,i,n,o,r){var t=e.toString().split(".");return t[0]=t[0].replace(/\B(?=(\d{3})+(?!\d))/g,i),t.length>1&&(t[1]=t[1].split("").reverse().join("").replace(/\B(?=(\d{3})+(?!\d))/g,n.split("").reverse().join("")).split("").reverse().join("")),""!=t[1]&&void 0!==t[1]&&""!=n&&e.split(".")[1].length%3==1&&-1!=t[1].indexOf(n)&&0==r&&(t[1]=t[1].slice(0,t[1].lastIndexOf(n)).concat(t[1].slice(t[1].lastIndexOf(n)+n.length))),t.join(o)},LongDivide.PrintError=function(e){if(!0===LongDivide.errors){for(var i=["Error in function LongDivide():"],n=0;n<arguments.length;n++)i.push(arguments[n]);console.log.apply(this,i)}},LongDivide.PrintWarning=function(e){if(!0===LongDivide.warnings){for(var i=["Warning in function LongDivide():"],n=0;n<arguments.length;n++)i.push(arguments[n]);console.log.apply(this,i)}};